
BootStrap: docker
From: ubuntu:24.04

%files
#    ./patch/flexraw_patch /patch/flexraw_patch
#    ./patch/ffi_patch /patch/ffi_patch

%labels
    APPLICATION_NAME PCHES Ubuntu and R Defaults
    AUTHOR_NAME Jeff Nucciarone
    AUTHOR_EMAIL nucci@psu.edu
    BASED_ON Container definitions from Stanley Glidden, UNH WSAG
    YEAR 2025

%help
    Container for self-contained R  

%environment
    # Set system locale
    LANG=C.UTF-8 LC_ALL=C.UTF-8

    export PERL5LIB="/wbm/model:${PERL5LIB}"

%post

export TZ='America/New_York'
export DEBIAN_FRONTEND=noninteractive

apt-get update -y
apt-get install -y lsb-release \
git \
vim \
m4 \
zlib1g \
zlib1g-dev \
build-essential \
screen \
libpython3-dev \
apt-utils \
wget \
cmake \
curl \
wget \
autoconf \
bzip2 \
libtool \
libtool-bin \
gfortran \
patch

apt-get update -y

#install first
#HDF
apt-get install -y libhdf5-dev

#install second
#Netcdf
apt-get install -y libnetcdf-dev

#install third
#CDO

apt-get install -y cdo

apt-get install -y libproj-dev

apt-get install -y libgeos-dev

apt-get install -y python3-setuptools

# Install OpenMPI
apt-get install -y libopenmpi-dev
apt-get install -y openmpi-doc

# Install BLAS
apt-get install -y libopenblas-dev

# Install fftw3
apt-get install -y libfftw3-dev

apt-get install -y libfontconfig1-dev
apt-get install -y libharfbuzz-dev libfribidi-dev

#Install R
# Instructions adapted from https://cran.r-project.org/bin/linux/ubuntu/#root
# thanks to ren10 for the tip

# update indices
apt update -qq

# install two helper packages we need
apt-get install -y --no-install-recommends software-properties-common dirmngr

# add the signing key (by Michael Rutter) for these repos
# To verify key, run gpg --show-keys /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc 
# Fingerprint: E298A3A825C0D65DFD57CBB651716619E084DAB9
wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc

# add the repo from CRAN -- lsb_release adjusts to 'noble' or 'jammy' or ... as needed
add-apt-repository -y "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"

# install R itself
apt-get install -y --no-install-recommends r-base
#apt-get install -y r-base-core

# End of R base install, packages added further down

apt-get install -y --no-install-recommends \
libxml2-dev \
libcurl4-openssl-dev \
libssl-dev

#install gdal
apt-get install -y libgdal-dev
apt-get install -y gdal-bin

apt-get install -y tcsh

apt-get install -y nco
#apt-get install -y libgdal-perl
apt-get install tzdata

echo "Installing R packages..."
    R -e 'install.packages(c("tidyverse", "data.table", "shiny", "sensobol", "GPfit"), repos="https://cloud.r-project.org")'
    R -e 'install.packages(c("lhs", "BASS", "batchmeans", "mcmcse", "plot.matrix"), repos="https://cloud.r-project.org")'
    R -e 'install.packages(c("RColorBrewer", "ggplot2", "gridExtra", "dplyr"), repos="https://cloud.r-project.org")'
    R -e 'install.packages(c("foreach", "doParallel", "snow"), repos="https://cloud.r-project.org")'
    R -e 'install.packages("sf")'
    R -e 'install.packages("terra")'
    R -e 'install.packages("systemfonts")'
    R -e 'install.packages("ggraph")'
    R -e 'install.packages("tidyquant")'
    R -e 'install.packages("caret")'
    R -e 'install.packages("tidyverse")'
    R -e 'install.packages("e1071")'
    R -e 'install.packages("plotly")'
    R -e 'install.packages("mlr3")'
    R -e 'install.packages("xgboost")'

### Needed or you will get the MROOT problem when you run PDL
apt-get install -y freeglut3-dev
apt-get install -y libgsl-dev
apt-get install -y cpanminus

# Now install R Studio

apt-get install -y libasound2t64
apt-get install -y --allow-unauthenticated libjpeg62
apt-get install -y gdebi-core
wget  https://s3.amazonaws.com/rstudio-ide-build/electron/jammy/amd64/rstudio-2025.05.0-496-amd64.deb
gdebi -n rstudio-2025.05.0-496-amd64.deb


apt-get update -y

# A lot of these are commented out as they were required to run WBM
# WBM is not intended to be part of this container, so these are commented
# out to save build time. They are being left for reference.
# With no libgdal-perl available for this Ubuntu release, not sure if these
# would work anyway

###### CPAN ######
#cpanm File::Tee
#cpanm Inline
#cpanm Inline::C
#cpanm Parallel::ForkManager
#cpanm Math::VecStat

#Alex found problem with bad data with version 2.063
#cpanm PDL@2.079

#uparrow problem
##########################################
apt install -y libterm-readline-gnu-perl
##########################################

#cpanm CGI
cpanm Time::JulianDay
cpanm Term::ReadKey
#cpanm PDL::NetCDF

#needed to install FFI
#With ubuntu 22.04 had to use -f (force) to install Alien::autoconf otherwise installation of Geo::GDAL::FFI fails because of ambiguous test results.
#cpanm -f Alien::autoconf

#cpanm Geo::GDAL::FFI

#PATCH
#patch /usr/local/lib/x86_64-linux-gnu/perl/5.34.0/PDL/IO/FlexRaw.pm < /patch/flexraw_patch

# this one removed via info from Stanley as the bug is probably fixed
#patch /usr/local/share/perl/5.34.0/Geo/GDAL/FFI.pm < /patch/ffi_patch

apt-get install -y ncview

apt-get install -y python3-mpi4py

apt-get install -y dos2unix

########## Needed for ncdump ###########
apt-get install -y netcdf-bin

%environment
    R_LIBS_USER=/usr/local/lib/R/site-library
    export R_LIBS_USER

