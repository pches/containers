BootStrap: docker
From: ubuntu:jammy

%files
    ./patch/flexraw_patch /patch/flexraw_patch
    ./patch/ffi_patch /patch/ffi_patch
    ./gams/linux_x64_64_sfx.exe /opt/gams/linux_x64_64_sfx.exe
    ./gams/gamslice.txt /opt/gams/tmp/gamslice.txt


%labels
    APPLICATION_NAME UNH Water Balance Model (WBM)
    AUTHOR_NAME Stanley Glidden
    AUTHOR_EMAIL stanley.glidden@unh.edu
    YEAR 2023

%help
    Container for execution of the UNH Water Balance Model (WBM)

%environment

    LANG=C.UTF-8 LC_ALL=C.UTF-8
    
%post
    # Change to tmp directory to download temporary files.
    cd /tmp

    ln -s /wbm/model/RIMS.conf /etc/RIMS.conf
    ln -s /wbm/model/WBM.conf  /etc/WBM.conf

    
    export DEBIAN_FRONTEND=noninteractive
    
    apt-get -qq -y update 
    apt-get -qq install -y --no-install-recommends \
        patch \
        git \
        libz-dev \
        build-essential \
        libssl-dev \
        libhdf5-dev \
        libnetcdf-dev \
        cpanminus \
        openssl \
        libsqlite3-0 \
        libsqlite3-dev \
        ca-certificates \
        pdl \
        libproj-dev \
        libgeos-dev \
        gdal-bin \
        libgdal-perl \
        freeglut3-dev \
        libgsl-dev    \
        cpanminus     \
        wget


    export LANG=C.UTF-8 LC_ALL=C.UTF-8

    apt-get -qq -y update 
    cpanm Inline
    cpanm Inline::C
    cpanm File::Tee
    cpanm Parallel::ForkManager
    cpanm Math::VecStat
    cpanm CGI
    cpanm Term::ReadKey
    cpanm --force Time::JulianDay
    cpanm Alien::gdal
    cpanm Geo::GDAL::FFI
    cpanm PDL::NetCDF

    patch /usr/local/share/perl/5.34.0/Geo/GDAL/FFI.pm < /patch/ffi_patch
    patch /usr/lib/x86_64-linux-gnu/perl5/5.34/PDL/IO/FlexRaw.pm < /patch/flexraw_patch

    apt update -qq -y
    apt install -y --no-install-recommends software-properties-common dirmngr
    wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
    add-apt-repository -y "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"

    export TZ=America/New_York
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

    #install R
    #apt-get -y install r-base=4.1.2-1ubuntu2
    #apt-get -y install r-base-core=4.1.2-1ubuntu2
    apt-get -y install r-base-dev=4.1.2-1ubuntu2     #possibly the only one needed
    #apt-get -y install r-recommended=4.1.2-1ubuntu2
    #apt-get -y install r-base-html=4.1.2-1ubuntu2

    #install R libraries
    R --slave -e 'install.packages("devtools",repos="https://cran.rstudio.com/")'

    R --slave -e 'require(remotes);install_version("igraph", version = "1.2.8", repos = "http://cran.us.r-project.org")'

    R --slave -e 'require(remotes);install_version("readr", version = "2.0.2", repos = "http://cran.us.r-project.org")'

    R --slave -e 'require(remotes);install_version("assertthat", version = "0.2.1", repos = "http://cran.us.r-project.org")'

    R --slave -e 'require(remotes);install_version("foreach", version = "1.5.1", repos = "http://cran.us.r-project.org")'

    R --slave -e 'require(remotes);install_version("ggplot2", version = "3.3.5", repos = "http://cran.us.r-project.org")'

    R --slave -e 'require(remotes);install_version("randtoolbox", version = "1.31.1", repos = "http://cran.us.r-project.org")'

    R --slave -e 'require(remotes);install_version("lhs", version = "1.1.3", repos = "http://cran.us.r-project.org")'

    R --slave -e 'require(remotes);install_version("raster", version = "3.5.2", repos = "http://cran.us.r-project.org")'

    R --slave -e 'require(remotes);install_version("rgdal", version = "1.5.27", repos = "http://cran.us.r-project.org")'

    R --slave -e 'require(remotes);install_version("rgeos", version = "0.5.8", repos = "http://cran.us.r-project.org")'

    R --slave -e 'require(remotes);install_version("reshape2", version = "1.4.4", repos = "http://cran.us.r-project.org")'

    R --slave -e 'require(remotes);install_version("R.utils", version = "2.11.0", repos = "http://cran.us.r-project.org")'

    #install GAMS
    cd /opt/gams;./linux_x64_64_sfx.exe
    rm -rf /opt/gams/linux_x64_64_sfx.exe
    mv /opt/gams/tmp/gamslice.txt /opt/gams/gams33.2_linux_x64_64_sfx/gamslice.txt
    rmdir /opt/gams/tmp
    cd /opt/gams/gams33.2_linux_x64_64_sfx;./gamsinst


    #install GAMS R module from git
    R --slave -e "require(remotes);remotes::install_github('GAMS-dev/gdxrrw/gdxrrw')"

    #add for gcamland
    apt-get -y install libxml2-dev


   #install mate, probably not correct
   #apt install ubuntu-mate-desktop -y

    # Cleanup
    apt-get autoremove
    apt-get -qq clean
    rm -rf /var/lib/apt/lists/*

