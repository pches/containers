
BootStrap: docker
From: ubuntu:24.04

#%files
#    ./sources/time-1.9.tar.gz /tmp
#    ./sources/openmpi-5.0.7.tar.gz

#    ./patch/flexraw_patch /patch/flexraw_patch
#    ./patch/ffi_patch /patch/ffi_patch

%labels
    APPLICATION_NAME PCHES Ubuntu and R Defaults
    AUTHOR_NAME Jeff Nucciarone
    AUTHOR_EMAIL nucci@psu.edu
    BASED_ON Container definitions from Stanley Glidden, UNH WSAG
    YEAR 2025

%help
    Container for self-contained R with Ubuntu 24.04 LTS base
    Installs R version 5.2.1 and common R libraries for PCHES


%environment
    # Set system locale
    LANG=C.UTF-8 LC_ALL=C.UTF-8


%post

export TZ='America/New_York'
export DEBIAN_FRONTEND=noninteractive

apt-get update -y
apt-get install -y --no-install-recommends lsb-release \
    git \
    vim \
    m4 \
    zlib1g \
    zlib1g-dev \
    build-essential \
    screen \
    libpython3-dev \
    libhwloc-dev  \
    apt-utils \
    wget \
    cmake \
    curl \
    wget \
    autoconf \
    bzip2 \
    libtool \
    libtool-bin \
    gfortran \
    openssh-client \
    numactl \
    ca-certificates \
    less \
    patch

apt-get update -y

#install first
#HDF
apt-get install -y --no-install-recommends libhdf5-dev

#install second
#Netcdf
apt-get install -y --no-install-recommends libnetcdf-dev

#install third
#CDO

apt-get install -y --no-install-recommends cdo

apt-get install -y --no-install-recommends libproj-dev

apt-get install -y --no-install-recommends libgeos-dev

apt-get install -y --no-install-recommends python3-setuptools

apt-get install -y --no-install-recommends libfontconfig1-dev
apt-get install -y --no-install-recommends libharfbuzz-dev libfribidi-dev

# Install OpenMPI
apt-get install -y --no-install-recommends libopenmpi-dev
apt-get install -y --no-install-recommends openmpi-doc

# Install BLAS
apt-get install -y --no-install-recommends libopenblas-dev

# Install fftw3
apt-get install -y --no-install-recommends libfftw3-dev

apt-get install -y --no-install-recommends \
libxml2-dev \
libcurl4-openssl-dev \
libssl-dev

#install gdal
apt-get install -y --fix-missing --no-install-recommends libgdal-dev
apt-get install -y --no-install-recommends gdal-bin

apt-get install -y tcsh

apt-get install -y --no-install-recommends nco
#apt-get install -y --no-install-recommends libgdal-perl
apt-get install tzdata

apt-get install -y --no-install-recommends libatk1.0-0
apt-get install -y --no-install-recommends libatk-bridge2.0-0
apt-get install -y --no-install-recommends libudunits2-dev
apt-get install -y --no-install-recommends libgtk-3-0

#Install R
# Instructions adapted from https://cran.r-project.org/bin/linux/ubuntu/#root
# thanks to ren10 for the tip

# update indices
apt update -qq

# install two helper packages we need
apt-get install -y --no-install-recommends software-properties-common dirmngr

# add the signing key (by Michael Rutter) for these repos
# To verify key, run gpg --show-keys /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc 
# Fingerprint: E298A3A825C0D65DFD57CBB651716619E084DAB9
wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc

# add the repo from CRAN -- lsb_release adjusts to 'noble' or 'jammy' or ... as needed
add-apt-repository -y "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"

# install R itself
apt-get install -y --no-install-recommends \
r-base=4.5.1-1.2404.0 

#r-base-core=4.5.1-1.2404.0 \
#r-base-dev=4.5.1-1.2404.0 \
#r-doc-html=4.5.1-1.2404.0 \
#r-recommended=4.5.1-1.2404.0 

# End of R base install, packages added further down

echo "Installing R packages..."

echo "Installing R packages..."
#     R -e 'install.packages(c("lhs", "BASS", "batchmeans", "mcmcse", "plot.matrix"), repos="https://cloud.r-project.org")'
      R -e 'install.packages("lhs", version="1.2.0", repos="https://cloud.r-project.org")'
      R -e 'install.packages("BASS", version="1.3.1", repos="https://cloud.r-project.org")'
      R -e 'install.packages("batchmeans", version="1.0.4", repos="https://cloud.r-project.org")'
      R -e 'install.packages("mcmcse", version="1.5.0", repos="https://cloud.r-project.org")'
      R -e 'install.packages("plot.matrix", version="1.6.2", repos="https://cloud.r-project.org")'
      R -e 'install.packages("RColorBrewer", version="1.1.3", repos="https://cloud.r-project.org")'
      R -e 'install.packages("ggplot2", version="3.5.2", repos="https://cloud.r-project.org")'
      R -e 'install.packages("gridExtra", version="2.3", repos="https://cloud.r-project.org")'
      R -e 'install.packages("dplyr", version="1.1.4", repos="https://cloud.r-project.org")'
      R -e 'install.packages("foreach", version="1.5.2", repos="https://cloud.r-project.org")'
      R -e 'install.packages("doParallel", version="1.0.17", repos="https://cloud.r-project.org")'
      R -e 'install.packages("snow", version="0.4.4", repos="https://cloud.r-project.org")'
      R -e 'install.packages("tidyverse", version="2.0.0", repos="https://cloud.r-project.org")'
      R -e 'install.packages("data.table", version="1.17.8", repos="https://cloud.r-project.org")'
      R -e 'install.packages("shiny", version="1.11.1", repos="https://cloud.r-project.org")'
      R -e 'install.packages("sensobol", version="1.1.5", repos="https://cloud.r-project.org")'
      R -e 'install.packages("GPfit", version="1.0.9", repos="https://cloud.r-project.org")'
      R -e 'install.packages("Rmpi", version="0.7.3.3", repos="https://cloud.r-project.org")'
      R -e 'install.packages("sf", version="1.0.21", repos="https://cloud.r-project.org")'
      R -e 'install.packages("terra", version="1.8.54", repos="https://cloud.r-project.org")'
      R -e 'install.packages("systemfonts", version="1.2.3", repos="https://cloud.r-project.org")'
      R -e 'install.packages("ggraph", version="2.2.1", repos="https://cloud.r-project.org")'
      R -e 'install.packages("ggridges", version="0.5.6", repos="https://cloud.r-project.org")'
      R -e 'install.packages("patchwork", version="1.3.1", repos="https://cloud.r-project.org")'
      R -e 'install.packages("tidyquant", version="1.0.11", repos="https://cloud.r-project.org")'
      R -e 'install.packages("caret", version="7.0.1", repos="https://cloud.r-project.org")'
      R -e 'install.packages("e1071", version="1.7.16", repos="https://cloud.r-project.org")'
      R -e 'install.packages("plotly", version="4.11.0", repos="https://cloud.r-project.org")'
      R -e 'install.packages("mlr3", version="1.0.1", repos="https://cloud.r-project.org")'
      R -e 'install.packages("xgboost", version="1.7.11.1", repos="https://cloud.r-project.org")'
      R -e 'install.packages("gamstransfer", version="3.0.6", repos="https://cloud.r-project.org")'
      R -e 'install.packages("R.utils", version="2.13.0", repos="https://cloud.r-project.org")'
      R -e 'install.packages("devtools", version="2.4.5", repos="https://cloud.r-project.org")'
      R -e 'install.packages("igraph", version="2.1.4", repos="https://cloud.r-project.org")'
      R -e 'install.packages("readr", version="2.1.5", repos="https://cloud.r-project.org")'
      R -e 'install.packages("assertthat", version="0.2.1", repos="https://cloud.r-project.org")'
      R -e 'install.packages("randtoolbox", version="2.0.5", repos="https://cloud.r-project.org")'
      R -e 'install.packages("raster", version="3.6.32", repos="https://cloud.r-project.org")'
      R -e 'install.packages("reshape2", version="1.4.4", repos="https://cloud.r-project.org")'

### Needed or you will get the MROOT problem when you run PDL
apt-get install -y --no-install-recommends freeglut3-dev
apt-get install -y --no-install-recommends libgsl-dev
apt-get install -y --no-install-recommends cpanminus

# Now install R Studio

apt-get install -y --no-install-recommends libasound2t64
apt-get install -y --allow-unauthenticated libjpeg62
apt-get install -y --no-install-recommends gdebi-core
wget  https://s3.amazonaws.com/rstudio-ide-build/electron/jammy/amd64/rstudio-2025.05.0-496-amd64.deb
gdebi -n rstudio-2025.05.0-496-amd64.deb


apt-get update -y

# A lot of these are commented out as they were required to run WBM
# WBM is not intended to be part of this container, so these are commented
# out to save build time. They are being left for reference.
# With no libgdal-perl available for this Ubuntu release, not sure if these
# would work anyway

###### CPAN ######
#cpanm File::Tee
#cpanm Inline
#cpanm Inline::C
#cpanm Parallel::ForkManager
#cpanm Math::VecStat

#Alex found problem with bad data with version 2.063
#cpanm PDL@2.079

#uparrow problem
##########################################
apt install -y libterm-readline-gnu-perl
##########################################

#cpanm CGI
cpanm Time::JulianDay
cpanm Term::ReadKey
#cpanm PDL::NetCDF

#needed to install FFI
#With ubuntu 22.04 had to use -f (force) to install Alien::autoconf otherwise installation of Geo::GDAL::FFI fails because of ambiguous test results.
#cpanm -f Alien::autoconf

#cpanm Geo::GDAL::FFI

apt-get install -y --no-install-recommends ncview

apt-get install -y --no-install-recommends python3-mpi4py

apt-get install -y --no-install-recommends dos2unix

########## Needed for ncdump ###########
apt-get install -y --no-install-recommends netcdf-bin

# Install gnu time
# This step should be one of the last items as some package 
# installers can overwrite the /usr/local file system

wget https://ftp.gnu.org/gnu/time/time-1.9.tar.gz
tar -xzf time-1.9.tar.gz
cd time-1.9
./configure 
make
make install

# Cleanup
cd  ../
rm -r time-1.9
rm time-1.9.tar.gz

apt-get autoremove
apt-get -qq clean
rm -rf /var/lib/apt/lists/*

%environment
    R_LIBS_USER=/usr/local/lib/R/site-library
    export R_LIBS_USER

%test
    # Test step

    grep -q NAME=\"Ubuntu\" /etc/os-release
    if [ $? -eq 0 ]; then
        echo "Container base is Ubuntu as expected."
    else
        echo "Container base is not Ubuntu."
        exit 1
    fi

